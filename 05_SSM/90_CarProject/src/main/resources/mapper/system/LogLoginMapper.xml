<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.system.mapper.LogLoginMapper">
  <resultMap id="BaseResultMap" type="com.study.system.domain.LogLogin">
    <!--@mbg.generated-->
    <!--@Table sys_log_login-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="loginip" jdbcType="VARCHAR" property="loginip" />
    <result column="logintime" jdbcType="TIMESTAMP" property="logintime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, loginname, loginip, logintime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_log_login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sys_log_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.study.system.domain.LogLogin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_log_login (loginname, loginip, logintime
      )
    values (#{loginname,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.study.system.domain.LogLogin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_log_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginname != null">
        loginname,
      </if>
      <if test="loginip != null">
        loginip,
      </if>
      <if test="logintime != null">
        logintime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null">
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.system.domain.LogLogin">
    <!--@mbg.generated-->
    update sys_log_login
    <set>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null">
        loginip = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.system.domain.LogLogin">
    <!--@mbg.generated-->
    update sys_log_login
    set loginname = #{loginname,jdbcType=VARCHAR},
      loginip = #{loginip,jdbcType=VARCHAR},
      logintime = #{logintime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryForAllLogLogin" resultMap="BaseResultMap">
    select <include refid="Base_Column_List">
  </include>
    from sys_log_login
    <where>
      <if test="logLoginDto.loginname != null and logLoginDto.loginname != ''">
        and loginname like concat('%',#{logLoginDto.loginname},'%')
      </if>
      <if test="logLoginDto.loginip != null and logLoginDto.loginip != ''">
        and loginip like concat('%',#{logLoginDto.loginip},'%')
      </if>
      <if test="logLoginDto.startTime != null and logLoginDto.startTime != ''">
        <!-- 数据库登陆时间 大于 登陆时间 -->
        and logintime &gt; #{logLoginDto.startTime}
      </if>
      <if test="logLoginDto.endTime != null and logLoginDto.endTime != ''">
        <!-- 数据库登陆时间小于结束时间 -->
        and logintime &lt; #{logLoginDto.endTime}
      </if>
    </where>
    order by logintime desc
  </select>

  <delete id="deleteBatch" parameterType="java.lang.Integer">
    delete from sys_log_login where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>