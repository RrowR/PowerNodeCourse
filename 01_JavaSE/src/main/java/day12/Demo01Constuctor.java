package day12;

/**
 * 1.什么是代码块？？？
 *   {}
 * 2.代码块的分类？？？
 *   a)局部代码块
 *   b)静态代码块
 *   c)构造代码块（非静态代码块）
 * 3.局部代码块的概述
 *   定义位置：在代码块或方法体中
 *   定义个数：任意多个
 *   执行顺序：从上往下，顺序执行
 *   注意事项：a)在局部代码块中定义的变量，我们称之为“局部变量”，该变量只能在当前作用域中使用，不能再代码块之外使用。
 * 4.静态代码块的概述
 *   定义位置：在类中，代码块和方法体之外，并且使用了static关键字来修饰
 *   定义个数：任意多个
 *   执行顺序：从上往下，顺序执行
 *   注意事项：a)静态代码块，随着类的加载而执行，并且永远只会执行一次。
 *              执行时间：加载类的时候执行
 *              执行次数：永远只会执行一次，因为类只会加载一次。
 *            b)在静态代码中，我们只能操作当前类的静态内容，不能操作当前类的成员内容和this关键字。
 *              --> 执行静态代码块的时候，此时对象都还未创建，因此不能操作当前类的成员内容和this关键字。
 *              --> 加载类完毕后，静态代码块和静态变量属于从上往下顺序执行（容易出现在面试题中）。
 *            c)在静态代码块中定义的变量，我们称之为“局部变量”，该变量只能在当前作用域中使用，不能再代码块之外使用。
 *   使用场合：使用较多
 *      给静态变量赋初始值，实际开发中使用比较多，一般用于执行一些全局性的初始化操作。
 *      例如：创建工厂、加载数据库初始信息等等
 * 5.构造代码块的概述
 *   定义位置：在类中，代码块和方法体之外，并且不能使用static关键字来修饰。
 *   定义个数：任意多个
 *   执行顺序：从上往下，顺序执行
 *   注意事项：a)构造代码块随着对象的创建而执行，对象创建了多少次，则构造代码块就执行多少次。
 *              执行时间：创建对象的时候执行，并且在构造方法之前执行。
 *              执行次数：对象创建多少次，则就执行多少次
 *            b)在构造代码块中，我们可以操作 当前类 的 成员内容、静态内容和this关键字。
 *              --> 执行到构造代码块的时候，此时对象已经创建完毕，既然对象已经创建完毕，则对象所对应的类肯定也加载完毕。
 *              --> 创建对象的时候，成员变量的显示初始化和构造代码块属于顺序执行（容易出现在面试题中）。
 *            c)在构造代码块中定义的变量，我们称之为“局部变量”，该变量只能在当前作用域中使用，不能再代码块之外使用。
 *   使用场合：几乎不用
 *      a)可以将各个构造方法中公共的代码提取到构造代码块。
 *      b)匿名内部类不能提供构造方法，此时初始化操作可以放到构造代码块中。
 */
public class Demo01Constuctor {
}
